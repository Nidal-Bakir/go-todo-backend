// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: oauth_token.sql

package database_queries

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const oauthTokenUpdate = `-- name: OauthTokenUpdate :exec
UPDATE oauth_token
SET access_token = $1,
    refresh_token = $2::text,
    token_type = $3::text,
    expires_at = $4,
    issued_at = $5
WHERE id = $6
`

type OauthTokenUpdateParams struct {
	AccessToken  string           `json:"access_token"`
	RefreshToken pgtype.Text      `json:"refresh_token"`
	TokenType    pgtype.Text      `json:"token_type"`
	ExpiresAt    pgtype.Timestamp `json:"expires_at"`
	IssuedAt     pgtype.Timestamp `json:"issued_at"`
	ID           int32            `json:"id"`
}

// OauthTokenUpdate
//
//	UPDATE oauth_token
//	SET access_token = $1,
//	    refresh_token = $2::text,
//	    token_type = $3::text,
//	    expires_at = $4,
//	    issued_at = $5
//	WHERE id = $6
func (q *Queries) OauthTokenUpdate(ctx context.Context, arg OauthTokenUpdateParams) error {
	_, err := q.db.Exec(ctx, oauthTokenUpdate,
		arg.AccessToken,
		arg.RefreshToken,
		arg.TokenType,
		arg.ExpiresAt,
		arg.IssuedAt,
		arg.ID,
	)
	return err
}
